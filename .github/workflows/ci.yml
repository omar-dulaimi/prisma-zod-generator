name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.compute.outputs.should_run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Decide if CI should run
        id: compute
        shell: bash
        env:
          EVENT_NAME: ${{ github.event_name }}
          BASE_REF: ${{ github.base_ref }}
        run: |
          set -euo pipefail

          if [ "$EVENT_NAME" = "pull_request" ] && [ -n "${BASE_REF:-}" ]; then
            git fetch --no-tags --prune --depth=1 origin "+refs/heads/${BASE_REF}:refs/remotes/origin/${BASE_REF}"
            RANGE="origin/${BASE_REF}...HEAD"
          else
            PREV="${{ github.event.before }}"
            CUR="${{ github.sha }}"
            if [ -z "$PREV" ] || [ "$PREV" = "0000000000000000000000000000000000000000" ]; then
              RANGE="$CUR~1..$CUR"
            else
              RANGE="$PREV..$CUR"
            fi
          fi

          echo "Using range: $RANGE"

          # Collect changed files in range
          CHANGED=$(git diff --name-only $RANGE || true)
          echo "Changed files:\n$CHANGED"

          # Determine if all changes are non-code only
          # Non-code: docs site, markdown/docs, recipes, images/assets, and workflow config
          DOCS_ONLY=true
          if [ -n "$CHANGED" ]; then
            if echo "$CHANGED" | grep -Ev '^(website/|README\.md$|CHANGELOG\.md$|CLAUDE\.md$|LICENSE$|zodSchemas\.png$|recipes/|\.github/workflows/)' >/dev/null 2>&1; then
              DOCS_ONLY=false
            fi
          fi

          # Check commit messages for allowed types or breaking change
          HAS_ALLOWED=false
          if git log --format=%s $RANGE | grep -Ei '^(feat|fix|perf|revert|refactor|test|build|ci)(\(|!:|:)' >/dev/null 2>&1; then
            HAS_ALLOWED=true
          elif git log --format=%B $RANGE | grep -q 'BREAKING CHANGE'; then
            HAS_ALLOWED=true
          fi

          SHOULD_RUN=false
          if [ "$DOCS_ONLY" = false ] || [ "$HAS_ALLOWED" = true ]; then
            SHOULD_RUN=true
          fi

          echo "docs_only=$DOCS_ONLY"
          echo "has_allowed=$HAS_ALLOWED"
          echo "should_run=$SHOULD_RUN"
          echo "should_run=$SHOULD_RUN" >> "$GITHUB_OUTPUT"

  test:
    needs: filter
    if: needs.filter.outputs.should_run == 'true'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run gen-example

      - name: Run type checking
        run: pnpm run test:type-check

      - name: Run linting
        run: pnpm run lint || echo "Linting failed but continuing for now"
        continue-on-error: true

      # Vitest 3.x requires Node 20.19.0+ or 22.12.0+, so skip tests for Node 18
      - name: Run basic tests
        if: matrix.node-version != '18.x'
        run: pnpm run test:basic

  package-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and package
        run: |
          pnpm run gen-example
          ./package.sh

      - name: Test package integrity
        run: |
          cd package
          npm pack --dry-run

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-build
          path: package/
          retention-days: 7
