name: Semantic Release

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and test
        run: |
          pnpm run gen-example
          pnpm run typecheck
          pnpm run lint
          pnpm run test:basic

      - name: Build package
        run: ./package.sh

      - name: Semantic Release (with npm lifecycle)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run release

      # Removed changelog sync: docs page now links to GitHub
      # Keeping commit step below to capture version/lockfile changes

      - name: Commit and push workflow mutations (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          # Stage docs and common release-mutation files to avoid failing on dirty tree
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A \
            website/docs/changelog.md \
            package.json \
            pnpm-lock.yaml \
            package/package.json \
            CHANGELOG.md || true
          # If nothing is staged, skip committing to avoid exit 1 from git commit
          if git diff --cached --quiet; then
            echo "No docs changes to commit"
            exit 0
          fi
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "latest")
          git commit -m "chore(ci): commit workflow mutations (version bumps, lockfile, docs) for ${LAST_TAG} [skip ci]"
          git push origin HEAD:${GITHUB_REF_NAME}
